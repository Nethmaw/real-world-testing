openapi: 3.0.0
info:
  title: Conduit API
  description: Collection for testing the Conduit API
  version: 1.0.0

servers:
  - url: http://localhost:3000/api/

paths:
  # User and authentication
  /users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email: { type: string }
                    password: { type: string }
                    username: { type: string }
      responses:
        '201':
          description: User registered successfully
        '422':
          description: Unexpected error

  /users/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email: { type: string }
                    password: { type: string }
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error

  /user:
    get:
      summary: Get current user
      responses:
        '200':
          description: Current user retrieved successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error

      security:
        - BearerAuth: []

    put:
      summary: Update current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email: { type: string }
      responses:
        '200':
          description: User updated successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

  # Articles
  /articles/feed:
    get:
      summary: Get most recent articles from users you follow
      parameters:
        - name: offset
          in: query
          description: The number of items to skip before starting to collect the result set.
          required: false
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          description: The numbers of items to return.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Successfully retrieved the most recent articles from users you follow
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

  /articles:
    get:
      summary: Get recent articles globally
      parameters:
        - name: tag
          in: query
          description: Filter by tag
          required: false
          schema:
            type: string
        - name: author
          in: query
          description: Filter by author (username)
          required: false
          schema:
            type: string
        - name: favorited
          in: query
          description: Filter by favorites of a user (username)
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: The number of items to skip before starting to collect the result set.
          required: false
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          description: The numbers of items to return.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Global articles retrieved successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

    post:
      summary: Create an article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article:
                  type: object
                  properties:
                    title: { type: string }
                    description: { type: string }
                    body: { type: string }
                    tagList: { type: array, items: { type: string } }
      responses:
        '201':
          description: Article created successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

  /articles/{slug}:
    get:
      summary: Get an article
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article retrieved successfully
        '422':
          description: Unexpected error

    put:
      summary: Update an article
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                article:
                  type: object
                  properties:
                    body: { type: string }
      responses:
        '200':
          description: Article updated successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

    delete:
      summary: Delete an article
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article deleted successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

  # Favorites
  /articles/{slug}/favorite:
    post:
      summary: Favorite an article
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article favorited successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

    delete:
      summary: Unfavorite an article
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article unfavorited successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

  # Comments
  /articles/{slug}/comments:
    get:
      summary: Get all comments for an article
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comments retrieved successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error

    post:
      summary: Create a comment for an article
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: object
                  properties:
                    body: { type: string }
      responses:
        '200':
          description: Comment created successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

  /articles/{slug}/comments/{commentId}:
    delete:
      summary: Delete a comment for an article
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comment deleted successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

  # Profile
  /profiles/{USERNAME}:
    get:
      summary: Get a profile
      parameters:
        - name: USERNAME
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profile retrieved successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error

  /profiles/{USERNAME}/follow:
    post:
      summary: Follow a user
      parameters:
        - name: USERNAME
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User followed successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

    delete:
      summary: Unfollow a user
      parameters:
        - name: USERNAME
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User unfollowed successfully
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
      security:
        - BearerAuth: []

  # Tags
  /tags:
    get:
      summary: Get all tags
      responses:
        '200':
          description: Tags retrieved successfully
        '422':
          description: Unexpected error

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
